@misc{VR, 
	url={https://www.grandviewresearch.com/industry-analysis/virtual-reality-vr-market}, 
	journal={Virtual Reality Market Share & Trends Report, 2021-2028}, 
	year={2021}, 
	month={Mar}}

@misc{SpaceInvaders,
    author = {Wikipedia contributors},
    title = {Space Invaders},
    year = {2021},
    url = {https://en.wikipedia.org/w/index.php?title=Space_Invaders&oldid=1027084097},
    note = {Online; accessed 10-June-2021}}

@misc{BYB, 
	title={The Heart and Brain SpikerBox}, 
	url={https://backyardbrains.com/products/heartAndBrainSpikerBox}, 
	journal={Backyard Brains | Heart and Brain SpikerBox}}

@misc{brownlee_2020,
 title={A Gentle Introduction to the Fbeta-Measure for Machine Learning},
 url={https://machinelearningmastery.com/fbeta-measure-for-machine-learning/}, 
 journal={Machine Learning Mastery}, 
 author={Brownlee, Jason}, 
 year={2020}, 
 month={Jan}}

@misc{fahey_2019, 
 title={Simple IPC Using Named Pipes}, 
 url={https://www.eadan.net/blog/ipc-with-named-pipes/}, 
 journal={eadan.net}, 
 author={Fahey, Eadan}, 
 year={2019},
 month={Jul}} 

@misc{unutbu_2011,
 title={How to find the groups of consecutive elements in a NumPy array},
 url={https://stackoverflow.com/questions/7352684/how-to-find-the-groups-of-consecutive-elements-in-a-numpy-array},
 journal={Stack Overflow},
 author={unutbu},
 year={2011},
 month={Sep}} 
Unutbu's `consecutive` function was used.

@misc{kaggle, 
 title={Automated feature selection with sklearn}, 
 url={https://www.kaggle.com/residentmario/automated-feature-selection-with-sklearn}, 
 journal={Kaggle}, 
 author={Bilogur, Aleksey}, 
 year={2018}} 

@Article{numpy,
 title={Array programming with {NumPy}},
 author={Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
         van der Walt and Ralf Gommers and Pauli Virtanen and David
         Cournapeau and Eric Wieser and Julian Taylor and Sebastian
         Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
         and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
         Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
         R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
         G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
         Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
         Travis E. Oliphant},
 year={2020},
 month=sep,
 journal={Nature},
 volume={585},
 number={7825},
 pages={357--362},
 doi={10.1038/s41586-020-2649-2},
 publisher={Springer Science and Business Media {LLC}},
 url={https://doi.org/10.1038/s41586-020-2649-2}
}

@misc{pandas,
  author       = {Jeff Reback and
                  Wes McKinney and
                  jbrockmendel and
                  Joris Van den Bossche and
                  Tom Augspurger and
                  Phillip Cloud and
                  gfyoung and
                  Simon Hawkins and
                  Sinhrks and
                  Matthew Roeschke and
                  Adam Klein and
                  Terji Petersen and
                  Jeff Tratner and
                  Chang She and
                  William Ayd and
                  Shahar Naveh and
                  Marc Garcia and
                  patrick and
                  Jeremy Schendel and
                  Andy Hayden and
                  Daniel Saxton and
                  Vytautas Jancauskas and
                  Richard Shadrach and
                  Marco Gorelli and
                  Ali McMaster and
                  Pietro Battiston and
                  Skipper Seabold and
                  Kaiqi Dong and
                  chris-b1 and
                  h-vetinari},
  title        = {pandas-dev/pandas: Pandas 1.2.3},
  month        = {mar},
  year         = {2021},
  publisher    = {Zenodo},
  version      = {v1.2.3},
  doi          = {10.5281/zenodo.4572994},
  url          = {https://doi.org/10.5281/zenodo.4572994}
}

@ARTICLE{scipy,
  author  = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and
            Haberland, Matt and Reddy, Tyler and Cournapeau, David and
            Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and
            Bright, Jonathan and {van der Walt}, St{\'e}fan J. and
            Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and
            Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and
            Kern, Robert and Larson, Eric and Carey, C J and
            Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and
            {VanderPlas}, Jake and Laxalde, Denis and Perktold, Josef and
            Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and
            Harris, Charles R. and Archibald, Anne M. and
            Ribeiro, Ant{\^o}nio H. and Pedregosa, Fabian and
            {van Mulbregt}, Paul and {SciPy 1.0 Contributors}},
  title   = {{{SciPy} 1.0: Fundamental Algorithms for Scientific
            Computing in Python}},
  journal = {Nature Methods},
  year    = {2020},
  volume  = {17},
  pages   = {261--272},
  adsurl  = {https://rdcu.be/b08Wh},
  doi     = {10.1038/s41592-019-0686-2},
}

@Article{plot,
  Author    = {Hunter, J. D.},
  Title     = {Matplotlib: A 2D graphics environment},
  Journal   = {Computing in Science \& Engineering},
  Volume    = {9},
  Number    = {3},
  Pages     = {90--95},
  abstract  = {Matplotlib is a 2D graphics package used for Python for
  application development, interactive scripting, and publication-quality
  image generation across user interfaces and operating systems.},
  publisher = {IEEE COMPUTER SOC},
  doi       = {10.1109/MCSE.2007.55},
  year      = 2007
}

@article{catch22,
 author={Carl H. Lubba and Sarab S. Sethi and Philip Knaute and Simon R. Schultz and Ben D. Fulcher and  Nick S. Jones},
 title={catch22: CAnonical Time-series CHaracteristics},
 journal={Data Mining and Knowledge Discovery},
 volume={33},
 pages={1821--1852},
 doi={10.1007/s10618-019-00647-x},
 abstract={Capturing the dynamical properties of time series concisely as interpretable feature vectors can enable efficient clustering and classification for time-series applications across science and industry. Selecting an appropriate feature-based representation of time series for a given application can be achieved through systematic comparison across a comprehensive time-series feature library, such as those in the hctsa toolbox. However, this approach is computationally expensive and involves evaluating many similar features, limiting the widespread adoption of feature-based representations of time series for real-world applications. In this work, we introduce a method to infer small sets of time-series features that (i) exhibit strong classification performance across a given collection of time-series problems, and (ii) are minimally redundant. Applying our method to a set of 93 time-series classification datasets (containing over 147,000 time series) and using a filtered version of the hctsa feature library (4791 features), we introduce a set of 22 CAnonical Time-series CHaracteristics, catch22, tailored to the dynamics typically encountered in time-series data-mining tasks. This dimensionality reduction, from 4791 to 22, is associated with an approximately 1000-fold reduction in computation time and near linear scaling with time-series length, despite an average reduction in classification accuracy of just 7%. catch22 captures a diverse and interpretable signature of time series in terms of their properties, including linear and non-linear autocorrelation, successive differences, value distributions and outliers, and fluctuation scaling properties. We provide an efficient implementation of catch22, accessible from many programming environments, that facilitates feature-based time-series analysis for scientific, industrial, financial and medical applications using a common language of interpretable time-series properties.},
 year={2019},
 url={https://doi.org/10.1007/s10618-019-00647-x}
}

@article{sklearn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@inproceedings{numba,
 author = {Lam, Siu Kwan and Pitrou, Antoine and Seibert, Stanley},
 title = {Numba: A LLVM-Based Python JIT Compiler},
 year = {2015},
 isbn = {9781450340052},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 url = {https://doi.org/10.1145/2833157.2833162},
 doi = {10.1145/2833157.2833162},
 abstract = {Dynamic, interpreted languages, like Python, are attractive for domain-experts and scientists experimenting with new ideas. 
             However, the performance of the interpreter is often a barrier when scaling to larger data sets. This paper presents a just-in-
             time compiler for Python that focuses in scientific and array-oriented computing. Starting with the simple syntax of Python, 
             Numba compiles a subset of the language into efficient machine code that is comparable in performance to a traditional compiled 
             language. In addition, we share our experience in building a JIT compiler using LLVM[1].},
 booktitle = {Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC},
 articleno = {7},
 numpages = {6},
 keywords = {Python, compiler, LLVM},
 location = {Austin, Texas},
 series = {LLVM '15}
}

@misc{levdist,
 author={Su, David},
 title={Weighted Levenshtein 0.2.1},
 year={2018},
 url={https://pypi.org/project/weighted-levenshtein/},
 journal={PyPI}
}


@misc{serial,
 author={Liechti, Chris},
 title={PySerial},
 year={2020},
 url={https://pyserial.readthedocs.io/en/latest/pyserial.html}
}